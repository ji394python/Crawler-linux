import requests
import json
import requests
import pandas as pd 
import os
import sys 
from traceback import format_exc
import log_manager as log
import time
from bs4 import BeautifulSoup
import lxml
from datetime import datetime


if __name__ == '__main__':
    
    log.processLog('==============================================================================================')
    log.processLog(f'【執行ADR_US新聞爬蟲專案】 {os.path.basename(__file__)}')
    
    #計時開始
    start = time.perf_counter() 
    try:
        tail_path = json.load(open(f"path.json",'r'))
        tail_path = tail_path['NasPublic']
        if not os.path.exists(f'{tail_path}'):
            os.makedirs(f'{tail_path}')
        ## 全部都爬
        url = "https://depositaryreceipts.citi.com/adr/notices/corpActions.aspx?pageId=8&subpageid=6"

        payload='__VIEWSTATE=%2FwEPDwUKMTM0MzM1Mjk5MQ9kFgJmD2QWAmYPZBYGAgIPZBYGAgEPD2QWBB4Hb25Gb2N1cwUPY2xlYXJUZXh0KHRoaXMpHgZvbkJsdXIFD2NsZWFyVGV4dCh0aGlzKWQCAw8PFgIeCEltYWdlVXJsBVNodHRwczovL2RlcG9zaXRhcnlyZWNlaXB0cy5jaXRpLmNvbS9hZHIvU2l0ZUNvbGxlY3Rpb25JbWFnZXMvaW1hZ2VzL2J0bl9zZWFyY2gxLmdpZmRkAgcPDxYCHgtOYXZpZ2F0ZVVybAU7aHR0cHM6Ly9jaXRpYWRyLmZhY3RzZXRkaWdpdGFsc29sdXRpb25zLmNvbS93d3cvc2VhcmNoLmlkbXNkZAIDD2QWBgIBDw9kFgQfAAUPY2xlYXJUZXh0KHRoaXMpHwEFD2NsZWFyVGV4dCh0aGlzKWQCAw8PFgIfAgVTaHR0cHM6Ly9kZXBvc2l0YXJ5cmVjZWlwdHMuY2l0aS5jb20vYWRyL1NpdGVDb2xsZWN0aW9uSW1hZ2VzL2ltYWdlcy9idG5fc2VhcmNoMS5naWZkZAIHDw8WAh8DBSovYWRyL2d1aWRlcy91aWcuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9MzRkZAIED2QWDmYPZBYCAgEPFgIeBFRleHQFEUNvcnBvcmF0ZSBBY3Rpb25zZAIBDxYCHwQF9AE8cD5UaGUgZm9sbG93aW5nIHF1ZXJ5IGZvcm0gYWxsb3dzIHlvdSB0byBzZWFyY2ggZm9yIGNvcnBvcmF0ZSBhY3Rpb24gYW5ub3VuY2VtZW50cyBvbiBDaXRp4oCZcyBEZXBvc2l0YXJ5IFJlY2VpcHQgaXNzdWVycy4gU2VhcmNoIGZvciBjb3Jwb3JhdGUgYWN0aW9ucyBieSBjb21wYW55IG5hbWUsIGN1c2lwLCB0aWNrZXIsIGNvdW50cnksIGV4Y2hhbmdlLCBhbm5vdW5jZW1lbnQgZGF0ZSBvciBhY3Rpb24gdHlwZS48Yj48L3A%2BZAICDxYCHgtfIUl0ZW1Db3VudAIaFjRmD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9QWQWAmYPFQEBQWQCAQ9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PUJkFgJmDxUBAUJkAgIPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1DZBYCZg8VAQFDZAIDD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9RGQWAmYPFQEBRGQCBA9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PUVkFgJmDxUBAUVkAgUPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1GZBYCZg8VAQFGZAIGD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9R2QWAmYPFQEBR2QCBw9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PUhkFgJmDxUBAUhkAggPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1JZBYCZg8VAQFJZAIJD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9SmQWAmYPFQEBSmQCCg9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PUtkFgJmDxUBAUtkAgsPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1MZBYCZg8VAQFMZAIMD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9TWQWAmYPFQEBTWQCDQ9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PU5kFgJmDxUBAU5kAg4PZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1PZBYCZg8VAQFPZAIPD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9UGQWAmYPFQEBUGQCEA9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PVFkFgJmDxUBAVFkAhEPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1SZBYCZg8VAQFSZAISD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9U2QWAmYPFQEBU2QCEw9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PVRkFgJmDxUBAVRkAhQPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1VZBYCZg8VAQFVZAIVD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9VmQWAmYPFQEBVmQCFg9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PVdkFgJmDxUBAVdkAhcPZBYCAgEPDxYCHwMFRC9hZHIvbm90aWNlcy9wZ21fZGlzcENBLmFzcHg%2FcGFnZUlkPTgmc3ViUGFnZUlkPTYmYWN0aXZlPUEmY29tcGFueT1YZBYCZg8VAQFYZAIYD2QWAgIBDw8WAh8DBUQvYWRyL25vdGljZXMvcGdtX2Rpc3BDQS5hc3B4P3BhZ2VJZD04JnN1YlBhZ2VJZD02JmFjdGl2ZT1BJmNvbXBhbnk9WWQWAmYPFQEBWWQCGQ9kFgICAQ8PFgIfAwVEL2Fkci9ub3RpY2VzL3BnbV9kaXNwQ0EuYXNweD9wYWdlSWQ9OCZzdWJQYWdlSWQ9NiZhY3RpdmU9QSZjb21wYW55PVpkFgJmDxUBAVpkAgoPEGQPFmdmAgECAgIDAgQCBQIGAgcCCAIJAgoCCwIMAg0CDgIPAhACEQISAhMCFAIVAhYCFwIYAhkCGgIbAhwCHQIeAh8CIAIhAiICIwIkAiUCJgInAigCKQIqAisCLAItAi4CLwIwAjECMgIzAjQCNQI2AjcCOAI5AjoCOwI8Aj0CPgI%%3D&__EVENTTARGET=&__EVENTARGUMENT='
        headers = {
        'Host': 'depositaryreceipts.citi.com',
        'Origin': 'https://depositaryreceipts.citi.com',
        'Referer': 'https://depositaryreceipts.citi.com/adr/notices/corpActions.aspx?pageId=8&subpageid=6',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Cookie': '_abck=1309AD999539AEF24EBB948123DC484F~-1~YAAQJSmvi854WpaAAQAAWoIHpAegcwavshwljjLoyDrlUmJw3sLR9qYWmzkwnCEKvuvZeB/5bre6mz1I+PMneGy3x9vvaNrGdW/L4rNJCM3VOIiZLCIqSDD8ggwPHq1yBsFUPW+qSZxpvrBaST+X/9OyE5lafBWHT5mtgeR2xoPLA4W/WVDeBMgxH24Qh9OEYl1exgBlGmNyrwzgj0y73V55IOShSSU81ivxhV0kToY6oFOirdlCCnYOkvInCQBBt25mclhfONMXXGcopWKzKkDCMI2XGUN5ZEpx63fcfJockHwTLMs/gmR4uSoIIcjHZbmOJFYRucqdy+l1QOkZqVenYK3DZ6772FsOxk6SttjEuyZKJ9mP~-1~-1~-1; ak_bmsc=0D5FC3CBD9BA835820D82B9227EF830D~000000000000000000000000000000~YAAQJSmvi1F5WpaAAQAAmrQJpA9UjWnKOc94bVOP7uaoETTOnSeB+t9PjsFpa8IsbWNTZulitsQQtEsxxZnTv1Tz3TRzibZa/F7ykX4QrouQZA4GmqM0nGc59t5G4Fz1CGCq3VtK80L4rvjiEPetWhflhJcJgw1QF5D/PCE7wZWNik6I6e536KfNm/uCQdEbNGpxpznbvtLQxAcLcRra5wb3Qna8lUtVXVdhGIsC0oHX7kozGL6Etz1TuwPGdQP7HIKZyumd1wkZPIZxPmsqRhvCs5NXGXXNd1ythUHrHGzytjqfxqaRI97xEdyAUttAwg19lnorOIjAZV9BUhlPuEHPSQYfJOEBspIMZtwgy5HjEU5GCNnQ7evWQScfbGr4aXQ5gR7XQB0h6qxUQKQnBfj/Xxo8PdCSUZ2S7AgCZuXXY8/F2Ml4Duo=; bm_mi=1A965155091D705563404037F6475AC5~+iMCrSyRBgrwNM/6Ec+G8JRDXsAo+YDe8Ogo8qRHQPRF00dqsnwG9Uv8pANjoFIOCdYLRJXgacyEo5YmtV9wGHINvhdkh/DRlqylcEbU/hNZl11Ha+JoiPCvmM/pMomvdDEuHyGLeS/YppkSVZTlnxOkE7VOVY/QjGnMb2aY5ve6q9rEbAvhtImy9dku6BYGeH32WTU49tUQcL4cWfgR8zi5wDJNWP1fOgiDQwuMijX9SX2Rnszxw9Z2tpQ+JAxU; bm_sv=79CA07471F03868AA14738568D2A55A3~5UKkm65nMhSXMxLGFcGorjh+fkreNdWzeQov/O2jDE0b8jcn6EMtEnsLOcgV8OpBpgD23k/KgR3V4lyTJyXhfHDNd1p947TLJk2QEu2DCpWSY95Lr9R4JpNwX/VAW6hVfTM9jF1985GQi674UB6EvA==; bm_sz=6D3DB5D90D5E3FF0DDC572316DF3EE10~YAAQJSmvi9B4WpaAAQAAWoIHpA9W4m1tOScClwiO80hEysGJQRwTXGz7gB6dXgAHchKm6RmtxdZfHgu1PKXG0S5kmf2LRCk74VrFBm740rybTT57cSYP6XORqVWhyUz1Kh1FR89hNHdTNzsSMbBPnXmHaAUZ39lRWBu+4SM6G1PveNoAiNXlZ1rQWtEFnjlntAS/IGE/gKKoYnl2lbLpEhLn7FvPnpset4XZogHbLy02+NmdSMMLwtCv30WvYS4eoB67IrM/YxCClA+2LoHxNY6Ox2RKITuQiwZZRwNyzd00~3748663~4277043'
        }

        count = 0
        check = False
        while True:
            response = requests.request("POST", url, headers=headers, data=payload)
            if response.status_code == 200:
                resp = BeautifulSoup(response.text,'lxml')
                break
            if count >= 10:
                log.processLog(f'[city.py] 10次連線失敗，本日未完成ADR新聞爬取')
                print(f'[city.py] 10次連線失敗，本日未完成ADR新聞爬取')
                check = True
                break
            else:
                count += 1
                print(f'[city.py] ADR新聞爬取第{count}次連線失敗...5秒後重試')
                log.processLog(f'[city.py] ADR新聞爬取第{count}次連線失敗...5秒後重試')
                time.sleep(5)
        if not check:
            log.processLog(f'[city.py] ADR新聞第爬取完成...進入提取階段')
            print(f'[city.py] ADR新聞第爬取完成...進入提取階段')
            
            pdf_url = 'https://depositaryreceipts.citi.com/adr/notices/'
            df = pd.DataFrame()
            for i in resp.select('#tblCANotices tr[valign="top"]'):
                if len(i.select('td')) != 10:
                    print(i)
                else:
                    row = i.select('td')
                    company = row[0].text.strip() 
                    Date = datetime.strptime(row[1].text.strip(),'%m/%d/%Y').strftime('%Y-%m-%d')
                    url = pdf_url+row[2].select('a')[0]['href']
                    ticker = row[3].text.strip()
                    cusip = f"'{row[4].text.strip()}'" 
                    ratio = row[5].text.strip() 
                    Type = row[6].text.strip() 
                    country = row[7].text.strip() 
                    exchange = row[8].text.strip() 
                    action = row[9].text.strip() 
                    row = pd.Series([company,Date,url,ticker,cusip,ratio,Type,country,exchange,action])
                    row_df = pd.DataFrame([row])
                    df = pd.concat([df,row_df], ignore_index=True)
            df.columns = ['Company', 'Date of Notice', 'URL', 'Ticker', 'CUSIP', 'Ratio (ORD:DR)', 'Type', 'Country', 'Exchange', 'Corporate Action Type']
            df.sort_values('Date of Notice',ascending=False,inplace=True)

            df.to_csv(f'{tail_path}/City.csv',index=False,encoding='utf-8-sig')
            log.processLog(f'[city.py] 輸出：{tail_path}/City.csv')
            print(f'[city.py] 輸出：{tail_path}/City.csv')
            end = time.perf_counter()
            log.processLog(f'【結束程序】 {os.path.basename(__file__)} - 執行時間:{(end-start)}')
            log.processLog('==============================================================================================') 
    except:
        log.processLog(f'[city.py] 本次ADR新聞爬蟲遇到未知問題，請查看錯誤log檔')
        log.processLog(f'---------------------')
        log.errorLog(f'{format_exc()}')